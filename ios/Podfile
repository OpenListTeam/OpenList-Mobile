# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
  
  # Embed xcframeworks into Runner target
  installer.aggregate_targets.each do |aggregate_target|
    aggregate_target.user_project.targets.each do |target|
      next unless target.name == 'Runner'
      
      # Add xcframeworks to build settings
      target.build_configurations.each do |config|
        # Add framework search paths
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '$(PROJECT_DIR)/Frameworks'
        
        # Add system libraries needed by Go mobile
        config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
        config.build_settings['OTHER_LDFLAGS'] << '-lresolv'
      end
      
      # Add xcframeworks as embedded frameworks
      frameworks_dir = File.join(File.dirname(__FILE__), 'Frameworks')
      if Dir.exist?(frameworks_dir)
        frameworks_build_phase = target.frameworks_build_phase
        
        Dir.glob("#{frameworks_dir}/*.xcframework").each do |path|
          framework_ref = aggregate_target.user_project.new(Xcodeproj::Project::Object::PBXFileReference)
          framework_ref.name = File.basename(path)
          framework_ref.path = "Frameworks/#{File.basename(path)}"
          framework_ref.source_tree = '<group>'
          framework_ref.last_known_file_type = 'wrapper.xcframework'
          
          # Add to Frameworks group
          frameworks_group = aggregate_target.user_project.frameworks_group
          frameworks_group.children << framework_ref unless frameworks_group.children.include?(framework_ref)
          
          # Add to build phase
          build_file = frameworks_build_phase.add_file_reference(framework_ref)
          build_file.settings = { 'ATTRIBUTES' => ['CodeSignOnCopy', 'RemoveHeadersOnCopy'] }
        end
        
        aggregate_target.user_project.save
      end
    end
  end
end
